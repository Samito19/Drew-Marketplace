{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport validation from \"./validation\";\n\nconst useForm = submitForm => {\n  _s();\n\n  const [values, setValues] = useState({\n    fullname: \"\",\n    email: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const [dataIsCorrect, setDataIsCorrect] = useState(false);\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    setErrors(validation(values));\n    setDataIsCorrect(true);\n  };\n\n  useEffect(() => {\n    if (Object.keys(errors).length === 0 && dataIsCorrect) {\n      submitForm(true);\n    }\n  }, [errors]);\n  return {\n    handleChange,\n    handleFormSubmit,\n    errors,\n    values\n  };\n};\n\n_s(useForm, \"ILMlRw5DvYCd2fOeM567eO4aue8=\");\n\nexport default useForm;","map":{"version":3,"sources":["/Users/samiamsaf/Desktop/School Documents/CSCI-390/Drew-Marketplace/src/components/useForm.js"],"names":["useState","useEffect","validation","useForm","submitForm","values","setValues","fullname","email","password","errors","setErrors","dataIsCorrect","setDataIsCorrect","handleChange","event","target","name","value","handleFormSubmit","preventDefault","Object","keys","length"],"mappings":";;AAAA,SAAQA,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,OAAO,GAAIC,UAAD,IAAe;AAAA;;AAC3B,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC;AACrCO,IAAAA,QAAQ,EAAC,EAD4B;AAErCC,IAAAA,KAAK,EAAC,EAF+B;AAGrCC,IAAAA,QAAQ,EAAC;AAH4B,GAAD,CAApC;AAMJ,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAACY,aAAD,EAAgBC,gBAAhB,IAAoCb,QAAQ,CAAC,KAAD,CAAlD;;AAEA,QAAMc,YAAY,GAAIC,KAAD,IAAU;AAC3BT,IAAAA,SAAS,CAAC,EACN,GAAGD,MADG;AAEN,OAACU,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAqBF,KAAK,CAACC,MAAN,CAAaE;AAF5B,KAAD,CAAT;AAIH,GALD;;AAMA,QAAMC,gBAAgB,GAAIJ,KAAD,IAAW;AAChCA,IAAAA,KAAK,CAACK,cAAN;AACAT,IAAAA,SAAS,CAACT,UAAU,CAACG,MAAD,CAAX,CAAT;AACAQ,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAJD;;AAMAZ,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAGoB,MAAM,CAACC,IAAP,CAAYZ,MAAZ,EAAoBa,MAApB,KAA+B,CAA/B,IAAoCX,aAAvC,EAAqD;AACjDR,MAAAA,UAAU,CAAC,IAAD,CAAV;AACH;AACJ,GAJQ,EAIN,CAACM,MAAD,CAJM,CAAT;AAMA,SAAO;AAACI,IAAAA,YAAD;AAAeK,IAAAA,gBAAf;AAAiCT,IAAAA,MAAjC;AAAyCL,IAAAA;AAAzC,GAAP;AACC,CA7BD;;GAAMF,O;;AA8BN,eAAeA,OAAf","sourcesContent":["import {useState, useEffect} from \"react\";\r\nimport validation from \"./validation\";\r\n\r\nconst useForm = (submitForm) =>{\r\n    const [values, setValues] = useState({\r\n    fullname:\"\",\r\n    email:\"\",\r\n    password:\"\"\r\n});\r\n\r\nconst [errors, setErrors] = useState({});\r\nconst [dataIsCorrect, setDataIsCorrect] = useState(false);\r\n\r\nconst handleChange = (event) =>{\r\n    setValues({\r\n        ...values,\r\n        [event.target.name]: event.target.value, \r\n    });\r\n};\r\nconst handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    setErrors(validation(values));\r\n    setDataIsCorrect(true);\r\n}\r\n\r\nuseEffect(() => {\r\n    if(Object.keys(errors).length === 0 && dataIsCorrect){\r\n        submitForm(true);\r\n    }\r\n}, [errors]);\r\n\r\nreturn {handleChange, handleFormSubmit, errors, values};\r\n};\r\nexport default useForm;"]},"metadata":{},"sourceType":"module"}