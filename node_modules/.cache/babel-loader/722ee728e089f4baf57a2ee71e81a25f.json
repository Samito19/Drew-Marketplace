{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\samia\\\\OneDrive\\\\Desktop\\\\School\\\\CSCI-390\\\\The Drew Maketplace Project\\\\Drew-Marketplace\\\\src\\\\components\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GoogleLogin from \"react-google-login\";\nimport \"./styles/login.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login() {\n  _s();\n\n  const [errorMessages, setErrorMessages] = useState({});\n  const [isSubmitted, setIsSubmitted] = useState(false); // Mock Database to test form\n\n  const database = [{\n    email: \"marketplace@drew.edu\",\n    password: \"drew\"\n  }];\n  const errors = {\n    email: \"Invalid Email Address!\",\n    password: \"Invalid Password!\"\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    var {\n      email,\n      password\n    } = document.forms[0];\n    const userData = database.find(user => user.email === email.value);\n\n    if (userData) {\n      if (userData.password !== password.value) {\n        setErrorMessages({\n          name: \"password\",\n          message: errors.password\n        });\n      } else {\n        setIsSubmitted(true);\n      }\n    } else {\n      setErrorMessages({\n        name: \"email\",\n        message: errors.email\n      });\n    }\n  };\n\n  const renderErrorMessage = name => name === errorMessages.name && /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"error\",\n    children: errorMessages.message\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 7\n  }, this);\n\n  const renderForm = /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID,\n      buttonText: \"Log in with Google\",\n      onSuccess: handleLogin,\n      onFailure: handleFailure,\n      cookiePolicy: \"single_host_origin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-page__container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"logo\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: require(\"./Squirrel-Logz.png\")\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"DrewU Marketplace\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), isSubmitted ? /*#__PURE__*/_jsxDEV(\"div\", {\n        type: \"success\",\n        children: \"User is successfully logged in!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) : renderForm]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Login, \"xHac37XC1FUyoDun112aRZB/AH4=\");\n\n_c = Login;\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 78,\n  columnNumber: 17\n}, this), rootElement);\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/samia/OneDrive/Desktop/School/CSCI-390/The Drew Maketplace Project/Drew-Marketplace/src/components/Login.js"],"names":["React","useState","ReactDOM","GoogleLogin","Login","errorMessages","setErrorMessages","isSubmitted","setIsSubmitted","database","email","password","errors","handleSubmit","event","preventDefault","document","forms","userData","find","user","value","name","message","renderErrorMessage","renderForm","process","env","REACT_APP_GOOGLE_CLIENT_ID","handleLogin","handleFailure","require","rootElement","getElementById","render"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport GoogleLogin from \"react-google-login\";\r\n\r\nimport \"./styles/login.css\";\r\n\r\nfunction Login() {\r\n  const [errorMessages, setErrorMessages] = useState({});\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  // Mock Database to test form\r\n  const database = [\r\n    {\r\n      email: \"marketplace@drew.edu\",\r\n      password: \"drew\",\r\n    },\r\n  ];\r\n\r\n  const errors = {\r\n    email: \"Invalid Email Address!\",\r\n    password: \"Invalid Password!\",\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    var { email, password } = document.forms[0];\r\n\r\n    const userData = database.find((user) => user.email === email.value);\r\n\r\n    if (userData) {\r\n      if (userData.password !== password.value) {\r\n        setErrorMessages({ name: \"password\", message: errors.password });\r\n      } else {\r\n        setIsSubmitted(true);\r\n      }\r\n    } else {\r\n      setErrorMessages({ name: \"email\", message: errors.email });\r\n    }\r\n  };\r\n\r\n  const renderErrorMessage = (name) =>\r\n    name === errorMessages.name && (\r\n      <div className=\"error\">{errorMessages.message}</div>\r\n    );\r\n\r\n  const renderForm = (\r\n    <div className=\"form\">\r\n      <GoogleLogin\r\n        clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID}\r\n        buttonText=\"Log in with Google\"\r\n        onSuccess={handleLogin}\r\n        onFailure={handleFailure}\r\n        cookiePolicy={\"single_host_origin\"}\r\n      ></GoogleLogin>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"login-page__container\">\r\n      <div className=\"login-form\">\r\n        <div className=\"logo\">\r\n          <img src={require(\"./Squirrel-Logz.png\")}></img>\r\n        </div>\r\n        <br></br>\r\n        <p>DrewU Marketplace</p>\r\n        <div className=\"title\">Sign In</div>\r\n        {isSubmitted ? (\r\n          <div type=\"success\">User is successfully logged in!</div>\r\n        ) : (\r\n          renderForm\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<Login />, rootElement);\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}