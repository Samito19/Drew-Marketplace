[{"/Users/samiamsaf/Desktop/School Documents/CSCI-390/Drew-Marketplace/src/index.js":"1","/Users/samiamsaf/Desktop/School Documents/CSCI-390/Drew-Marketplace/src/reportWebVitals.js":"2","/Users/samiamsaf/Desktop/School Documents/CSCI-390/Drew-Marketplace/src/App.js":"3","/Users/samiamsaf/Desktop/School Documents/CSCI-390/Drew-Marketplace/src/components/Form.js":"4","/Users/samiamsaf/Desktop/School Documents/CSCI-390/Drew-Marketplace/src/components/Login.js":"5","/Users/samiamsaf/Desktop/School Documents/CSCI-390/Drew-Marketplace/src/components/SignupForm.js":"6","/Users/samiamsaf/Desktop/School Documents/CSCI-390/Drew-Marketplace/src/components/SignupFormSuccess.js":"7","/Users/samiamsaf/Desktop/School Documents/CSCI-390/Drew-Marketplace/src/components/useForm.js":"8","/Users/samiamsaf/Desktop/School Documents/CSCI-390/Drew-Marketplace/src/components/validation.js":"9","/Users/samiamsaf/Desktop/School Documents/CSCI-390/Drew-Marketplace/src/components/Home.js":"10"},{"size":500,"mtime":1644337568000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1643934922000,"results":"13","hashOfConfig":"12"},{"size":544,"mtime":1645821017299,"results":"14","hashOfConfig":"12"},{"size":434,"mtime":1643949934000,"results":"15","hashOfConfig":"12"},{"size":2527,"mtime":1645824405657,"results":"16","hashOfConfig":"12"},{"size":2527,"mtime":1645453116000,"results":"17","hashOfConfig":"12"},{"size":393,"mtime":1644255864000,"results":"18","hashOfConfig":"12"},{"size":814,"mtime":1643952890000,"results":"19","hashOfConfig":"12"},{"size":589,"mtime":1643949930000,"results":"20","hashOfConfig":"12"},{"size":436,"mtime":1645824640363,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1h201hl",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/samiamsaf/Desktop/School Documents/CSCI-390/Drew-Marketplace/src/index.js",[],[],"/Users/samiamsaf/Desktop/School Documents/CSCI-390/Drew-Marketplace/src/reportWebVitals.js",[],[],"/Users/samiamsaf/Desktop/School Documents/CSCI-390/Drew-Marketplace/src/App.js",[],[],"/Users/samiamsaf/Desktop/School Documents/CSCI-390/Drew-Marketplace/src/components/Form.js",[],[],"/Users/samiamsaf/Desktop/School Documents/CSCI-390/Drew-Marketplace/src/components/Login.js",["57"],[],"import React, { useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport './styles/login.css'\r\n\r\nfunction Login() {\r\n  const [errorMessages, setErrorMessages] = useState({});\r\n  const [isSubmitted, setIsSubmitted] = useState(false);\r\n\r\n  // Mock Database to test form\r\n  const database = [\r\n    {\r\n      email: \"marketplace@drew.edu\",\r\n      password: \"drew\"\r\n    }\r\n  ];\r\n\r\n  const errors = {\r\n    email: \"Invalid Email Address!\",\r\n    password: \"Invalid Password!\"\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n\r\n    var { email, password } = document.forms[0];\r\n\r\n    const userData = database.find((user) => user.email === email.value);\r\n\r\n    if (userData) {\r\n      if (userData.password !== password.value) {\r\n        setErrorMessages({ name: \"password\", message: errors.password });\r\n      } else {\r\n        setIsSubmitted(true);\r\n      }\r\n    } else {\r\n      setErrorMessages({ name: \"email\", message: errors.email });\r\n    }\r\n  };\r\n\r\n  const renderErrorMessage = (name) =>\r\n    name === errorMessages.name && (\r\n      <div className=\"error\">{errorMessages.message}</div>\r\n    );\r\n\r\n  const renderForm = (\r\n    <div className=\"form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"input-container\">\r\n          <label type=\"email\">Email Address</label>\r\n          <input type=\"text\" name=\"email\" required />\r\n          {renderErrorMessage(\"email\")}\r\n        </div>\r\n        <div className=\"input-container\">\r\n          <label type=\"password\">Password</label>\r\n          <input type=\"password\" name=\"password\" required />\r\n          {renderErrorMessage(\"password\")}\r\n        </div>\r\n        <div className=\"button-container\">\r\n        <button className=\"submit\">Login</button>\r\n        </div>\r\n        <br></br>\r\n               <br></br>\r\n               <div>\r\n                   <h2>Don't have an account? <a href=\"Form\">Sign Up here</a></h2>\r\n                   </div>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"login-page__container\">\r\n      <div className=\"login-form\">\r\n      <div className=\"logo\">\r\n           <img src={require('./Squirrel-Logz.png')}></img>\r\n           </div>\r\n           <br></br>\r\n           <p>DrewU Marketplace</p>\r\n        <div className=\"title\">Sign In</div>\r\n        {isSubmitted ? <div type=\"success\">User is successfully logged in!</div> : renderForm}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<Login />, rootElement);\r\nexport default Login;",["58","59"],"/Users/samiamsaf/Desktop/School Documents/CSCI-390/Drew-Marketplace/src/components/SignupForm.js",["60","61","62"],[],"import { logDOM } from \"@testing-library/react\";\r\nimport React from \"react\";\r\nimport useForm from \"./useForm\";\r\nimport validation from \"./useForm\";\r\n\r\nconst SignupForm = ({submitForm}) => {\r\n    const {handleChange, handleFormSubmit, values, errors} = useForm(\r\n        submitForm\r\n    );\r\n  return(\r\n\r\n   <div className=\"container\">\r\n       <div className=\"app-wrapper\">\r\n           <div className=\"logo\">\r\n           <img src={require('./Squirrel-Logz.png')}></img>\r\n           </div>\r\n           <br></br>\r\n           <p>DrewU Marketplace</p>\r\n           <div>\r\n               <h1 className=\"title\">Create an Account</h1>\r\n           </div>\r\n           <form className=\"form-wrapper\">\r\n               <div className=\"name\">\r\n                   <label className=\"label\">Full Name</label>\r\n                   <input \r\n                   className=\"input\" \r\n                   type=\"text\" \r\n                   name=\"fullname\" \r\n                   value={values.fullname}\r\n                   onChange={handleChange}\r\n                   />\r\n                   {errors.fullname && <h6 className=\"error\">{errors.fullname}</h6>}\r\n               </div>\r\n               <div className=\"email\">\r\n                   <label className=\"label\">Email Address</label>\r\n                   <input \r\n                   className=\"input\" \r\n                   type=\"email\" \r\n                   name=\"email\" \r\n                   value={values.email}\r\n                   onChange={handleChange}\r\n                   />\r\n                   {errors.email && <h6 className=\"error\">{errors.email}</h6>}\r\n               </div>\r\n               <div className=\"password\">\r\n                   <label className=\"label\">Password</label>\r\n                   <input \r\n                   className=\"input\" \r\n                   type=\"password\" \r\n                   name=\"password\" \r\n                   value={values.password}\r\n                   onChange={handleChange}\r\n                   />\r\n                   {errors.password && <h6 className=\"error\">{errors.password}</h6>}\r\n               </div>\r\n               <div>\r\n                   <button className=\"submit\" onClick={handleFormSubmit}>\r\n                       Sign Up\r\n                    </button>\r\n               </div>\r\n               <br></br>\r\n               <br></br>\r\n               <div>\r\n                   <h2>Already have an account? <a href=\"Login\">Login here</a></h2>\r\n               </div>\r\n           </form>\r\n       </div>\r\n       </div>\r\n       );\r\n};\r\n\r\nexport default SignupForm;\r\n","/Users/samiamsaf/Desktop/School Documents/CSCI-390/Drew-Marketplace/src/components/SignupFormSuccess.js",["63"],[],"import React from 'react';\r\nimport \"../App.css\";\r\n\r\nconst SignupFormSuccess = () => {\r\n  return <div className=\"container\">\r\n      <div className=\"app-wrapper\">\r\n        <div>\r\n        <img src={require('./Squirrel-Logz.png')}></img>\r\n        </div>\r\n        <h1 className=\"form-success\">Your Account has been created!</h1>\r\n      </div>\r\n\r\n  </div>;\r\n};\r\n\r\nexport default SignupFormSuccess;\r\n","/Users/samiamsaf/Desktop/School Documents/CSCI-390/Drew-Marketplace/src/components/useForm.js",["64"],[],"import {useState, useEffect} from \"react\";\r\nimport validation from \"./validation\";\r\n\r\nconst useForm = (submitForm) =>{\r\n    const [values, setValues] = useState({\r\n    fullname:\"\",\r\n    email:\"\",\r\n    password:\"\"\r\n});\r\n\r\nconst [errors, setErrors] = useState({});\r\nconst [dataIsCorrect, setDataIsCorrect] = useState(false);\r\n\r\nconst handleChange = (event) =>{\r\n    setValues({\r\n        ...values,\r\n        [event.target.name]: event.target.value, \r\n    });\r\n};\r\nconst handleFormSubmit = (event) => {\r\n    event.preventDefault();\r\n    setErrors(validation(values));\r\n    setDataIsCorrect(true);\r\n}\r\n\r\nuseEffect(() => {\r\n    if(Object.keys(errors).length === 0 && dataIsCorrect){\r\n        submitForm(true);\r\n    }\r\n}, [errors]);\r\n\r\nreturn {handleChange, handleFormSubmit, errors, values};\r\n};\r\nexport default useForm;","/Users/samiamsaf/Desktop/School Documents/CSCI-390/Drew-Marketplace/src/components/validation.js",[],[],"/Users/samiamsaf/Desktop/School Documents/CSCI-390/Drew-Marketplace/src/components/Home.js",[],[],{"ruleId":"65","severity":1,"message":"66","line":75,"column":12,"nodeType":"67","endLine":75,"endColumn":54},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},{"ruleId":"72","severity":1,"message":"73","line":1,"column":10,"nodeType":"74","messageId":"75","endLine":1,"endColumn":16},{"ruleId":"72","severity":1,"message":"76","line":4,"column":8,"nodeType":"74","messageId":"75","endLine":4,"endColumn":18},{"ruleId":"65","severity":1,"message":"66","line":15,"column":12,"nodeType":"67","endLine":15,"endColumn":54},{"ruleId":"65","severity":1,"message":"66","line":8,"column":9,"nodeType":"67","endLine":8,"endColumn":51},{"ruleId":"77","severity":1,"message":"78","line":30,"column":4,"nodeType":"79","endLine":30,"endColumn":12,"suggestions":"80"},"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-native-reassign",["81"],"no-negated-in-lhs",["82"],"no-unused-vars","'logDOM' is defined but never used.","Identifier","unusedVar","'validation' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dataIsCorrect' and 'submitForm'. Either include them or remove the dependency array. If 'submitForm' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["83"],"no-global-assign","no-unsafe-negation",{"desc":"84","fix":"85"},"Update the dependencies array to be: [dataIsCorrect, errors, submitForm]",{"range":"86","text":"87"},[715,723],"[dataIsCorrect, errors, submitForm]"]